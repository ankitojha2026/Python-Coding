import tkinter as tk
from tkinter import messagebox, filedialog
import qrcode
from PIL import Image, ImageTk

class QRCodeApp:
    def __init__(self, root): # Fixed constructor name
        self.root = root
        win_width=900
        win_height=700
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        self.root.geometry(f'{win_width}x{win_height}+{(screen_width//2)-(win_width//2)}+{(screen_height//2)-(win_height//2)}')
        self.root.title("Text to QR Code Generator")
        self.root.geometry("900x600")
        self.root.config(bg="#f0f0f0")

        # Create main container frame
        self.main_frame = tk.Frame(self.root, bg="#f0f0f0")
        self.main_frame.pack(pady=20)

        # Title label
        self.title_label = tk.Label(self.main_frame, text="Text to QR Code Generator", font=("Arial", 18, "bold"), bg="#f0f0f0", fg="#333")
        self.title_label.grid(row=0, column=0, columnspan=3, pady=20)

        # Text input section
        self.text_label = tk.Label(self.main_frame, text="Enter Text to Encode:", font=("Arial", 12), bg="#f0f0f0")
        self.text_label.grid(row=1, column=0, pady=10, sticky="w")

        self.text_entry = tk.Entry(self.main_frame, font=("Arial", 12), width=40, borderwidth=2, relief="solid")
        self.text_entry.grid(row=1, column=1, padx=10, pady=10)

        # Generate QR button
        self.generate_button = tk.Button(self.main_frame, text="Generate QR Code", font=("Arial", 12), bg="#4CAF50", fg="white", command=self.generate_qr)
        self.generate_button.grid(row=2, column=0, columnspan=2, pady=10)

        # Reset button
        self.reset_button = tk.Button(self.main_frame, text="Reset", font=("Arial", 12), bg="#f44336", fg="white", command=self.reset_input)
        self.reset_button.grid(row=3, column=0, columnspan=2, pady=5)

        # QR Code Image Label
        self.qr_label = tk.Label(self.main_frame)
        self.qr_label.grid(row=4, column=0, columnspan=2, pady=20)

        # Save button
        self.save_button = tk.Button(self.main_frame, text="Save QR Code", font=("Arial", 12), bg="#2196F3", fg="white", command=self.save_qr)
        self.save_button.grid(row=5, column=0, columnspan=2, pady=5)

    def generate_qr(self):
        """Generate QR code from the input text."""
        text = self.text_entry.get()

        if not text:
            messagebox.showerror("Input Error", "Please enter some text.")
            return

        # Create QR code
        qr = qrcode.QRCode(
            version=1,
            error_correction=qrcode.constants.ERROR_CORRECT_L,
            box_size=10,
            border=4,
        )
        qr.add_data(text)
        qr.make(fit=True)

        # Create an image from the QR code
        img = qr.make_image(fill="black", back_color="white")

        # Resize image to fit within the window
        img = img.resize((250, 250))  # Resize to fit in the window
        self.display_qr_image(img)

    def display_qr_image(self, img):
        """Display the generated QR code on the GUI."""
        qr_photo = ImageTk.PhotoImage(img)
        self.qr_label.config(image=qr_photo)
        self.qr_label.image = qr_photo

    def save_qr(self):
        """Save the generated QR code to a file."""
        if self.qr_label.image is None:
            messagebox.showerror("Error", "No QR code to save. Please generate a QR code first.")
            return
        
        # Ask for file save location
        file_path = filedialog.asksaveasfilename(defaultextension=".png", filetypes=[("PNG files", "*.png")])
        if file_path:
            # Save the image using the qr_code library's internal object
            img = self.qr_label.image.PhotoImage_photo  # PIL Image object
            img.save(file_path)
            messagebox.showinfo("Success", f"QR Code saved as {file_path}")

    def reset_input(self):
        """Reset the input field and QR code display."""
        self.text_entry.delete(0, tk.END)
        self.qr_label.config(image='')
        self.qr_label.image = None

# Create the main window (root)
root = tk.Tk()

# Instantiate the QR code application
app = QRCodeApp(root)

# Run the Tkinter event loop
root.mainloop()